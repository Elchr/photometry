clear; clc;
%%ΑΝΑΓΩΓΗ ΦΩΤΟΗΛΕΚΤΡΙΚΩΝ ΔΕΔΟΜΕΝΩΝ ΓΙΑ ΦΩΤΟΜΕΤΡΙΑ ΤΟΥ "ΟΛΟΥ ΟΥΡΑΝΟΥ" 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Υπολογισμός μεγεθών αστέρων από παλμούς σε κάθε φίλτρο 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%U-filter
%%%%%%%%%%%%%
t_u=10; Klimaka_u=10;

palmoi_star_u=xlsread('u_filter.xlsx');        %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από αστέρα
palmoi_sky_u=xlsread('u_fil.xlsx');            %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από ουρανό

i_u=size(palmoi_star_u,1);    %αριθμός μετρήσεων παλμών αστέρα
j_u=size(palmoi_sky_u,1);     %αριθμός μετρήσεων παλμών ουρανού
h_u=size(palmoi_star_u,2);    %αριθμός αστέρων που έχουμε παλμούς
z_u=size(palmoi_sky_u,2);     
palmoi_u(1,h_u)=0; 
palmoi_2_u(1,z_u)=0;

for n=1:1:h_u                              %επαναληπτικός βρόχος για όλους τους αστέρες
for k=1:i_u                                %άθροισμα παλμών ενός αστέρα
    palmoi_u(1,n)=palmoi_u(1,n)+palmoi_star_u(k,n);
    k=k+1; 
end
end

for n=1:1:z_u                              %επαναληπτικός βρόχος για όλες τις μετρήσεις
for k=1:j_u                                %άθροισμα παλμών ουρανού
    palmoi_2_u(1,n)=palmoi_2_u(1,n)+palmoi_sky_u(k,n);
    k=k+1;
 end
end
real_palmoi_u=(palmoi_u/i_u)-(palmoi_2_u/j_u);     %πραγματική τιμή παλμών κάθε αστέρα
S_u=real_palmoi_u/t_u/Klimaka_u;           %Ανηγμένος παλμός κάθε αστέρα
m_u=-2.5*log10(S_u);                       %Μέγεθος στο φίλτρο U
u=m_u';                                    %Ταξινόμηση μεγεθών σε πίνακα-στήλη                                       

%B-filter
%%%%%%%%%%%%%
t_b=10; Klimaka_b=10;

palmoi_star_b=xlsread('b_filter.xlsx');        %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από αστέρα
palmoi_sky_b=xlsread('b_fil.xlsx');            %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από ουρανό

i_b=size(palmoi_star_b,1);    %αριθμός μετρήσεων παλμών αστέρα
j_b=size(palmoi_sky_b,1);     %αριθμός μετρήσεων παλμών ουρανού
h_b=size(palmoi_star_b,2);    %αριθμός αστέρων που έχουμε παλμούς
z_b=size(palmoi_sky_b,2);     
palmoi_b(1,h_b)=0; 
palmoi_2_b(1,z_b)=0;

for n=1:1:h_b                              %επαναληπτικός βρόχος για όλους τους αστέρες
for k=1:i_b                                %άθροισμα παλμών ενός αστέρα
    palmoi_b(1,n)=palmoi_b(1,n)+palmoi_star_b(k,n);
    k=k+1; 
end
end

for n=1:1:z_b                              %επαναληπτικός βρόχος για όλες τις μετρήσεις
for k=1:j_b                                %άθροισμα παλμών ουρανού
    palmoi_2_b(1,n)=palmoi_2_b(1,n)+palmoi_sky_b(k,n);
    k=k+1;
  end
end
real_palmoi_b=(palmoi_b/i_b)-(palmoi_2_b/j_b);     %πραγματική τιμή παλμών κάθε αστέρα
S_b=real_palmoi_b/t_b/Klimaka_b;           %Ανηγμένος παλμός κάθε αστέρα
m_b=-2.5*log10(S_b);                       %Μέγεθος στο φίλτρο B
b=m_b';                                    %Ταξινόμηση μεγεθών σε πίνακα-στήλη     


%V-filter
%%%%%%%%%%%%%
t_v=10; Klimaka_v=10;

palmoi_star_v=xlsread('v_filter.xlsx');        %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από αστέρα
palmoi_sky_v=xlsread('v_fil.xlsx');            %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από ουρανό

i_v=size(palmoi_star_v,1);    %αριθμός μετρήσεων παλμών αστέρα
j_v=size(palmoi_sky_v,1);     %αριθμός μετρήσεων παλμών ουρανού
h_v=size(palmoi_star_v,2);    %αριθμός αστέρων που έχουμε παλμούς
z_v=size(palmoi_sky_v,2);     
palmoi_v(1,h_v)=0; 
palmoi_2_v(1,z_v)=0;

for n=1:1:h_v                              %επαναληπτικός βρόχος για όλους τους αστέρες
for k=1:i_v                                %άθροισμα παλμών ενός αστέρα
    palmoi_v(1,n)=palmoi_v(1,n)+palmoi_star_v(k,n);
    k=k+1; 
end
end

for n=1:1:z_v                              %επαναληπτικός βρόχος για όλες τις μετρήσεις
for k=1:j_v                                %άθροισμα παλμών ουρανού
    palmoi_2_v(1,n)=palmoi_2_v(1,n)+palmoi_sky_v(k,n);
    k=k+1;
   end
end
real_palmoi_v=(palmoi_v/i_v)-(palmoi_2_v/j_v);     %πραγματική τιμή παλμών κάθε αστέρα
S_v=real_palmoi_v/t_v/Klimaka_v;           %Ανηγμένος παλμός κάθε αστέρα
m_v=-2.5*log10(S_v);                       %Μέγεθος στο φίλτρο V
v=m_v';                                    %Ταξινόμηση μεγεθών σε πίνακα-στήλη   


%R-filter
%%%%%%%%%%%%%
t_r=10; Klimaka_r=10;

palmoi_star_r=xlsread('r_filter.xlsx');        %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από αστέρα
palmoi_sky_r=xlsread('r_fil.xlsx');            %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από ουρανό

i_r=size(palmoi_star_r,1);    %αριθμός μετρήσεων παλμών αστέρα
j_r=size(palmoi_sky_r,1);     %αριθμός μετρήσεων παλμών ουρανού
h_r=size(palmoi_star_r,2);    %αριθμός αστέρων που έχουμε παλμούς
z_r=size(palmoi_sky_r,2);     
palmoi_r(1,h_r)=0; 
palmoi_2_r(1,z_r)=0;

for n=1:1:h_r                              %επαναληπτικός βρόχος για όλους τους αστέρες
for k=1:i_r                                %άθροισμα παλμών ενός αστέρα
    palmoi_r(1,n)=palmoi_r(1,n)+palmoi_star_r(k,n);
    k=k+1; 
end
end

for n=1:1:z_r                              %επαναληπτικός βρόχος για όλες τις μετρήσεις
for k=1:j_r                                %άθροισμα παλμών ουρανού
    palmoi_2_r(1,n)=palmoi_2_r(1,n)+palmoi_sky_r(k,n);
    k=k+1;
  end
end
real_palmoi_r=(palmoi_r/i_r)-(palmoi_2_r/j_r);     %πραγματική τιμή παλμών κάθε αστέρα
S_r=real_palmoi_r/t_r/Klimaka_r;           %Ανηγμένος παλμός κάθε αστέρα
m_r=-2.5*log10(S_r);                       %Μέγεθος στο φίλτρο R
b=m_r';                                    %Ταξινόμηση μεγεθών σε πίνακα-στήλη   

%I-filter
%%%%%%%%%%%%%
t_i=10; Klimaka_i=10;

palmoi_star_i=xlsread('i_filter.xlsx');        %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από αστέρα
palmoi_sky_i=xlsread('i_fil.xlsx');            %Εισαγωγή πίνακα δεδομένων για μετρήσεις παλμών από ουρανό

i_i=size(palmoi_star_i,1);    %αριθμός μετρήσεων παλμών αστέρα
j_i=size(palmoi_sky_i,1);     %αριθμός μετρήσεων παλμών ουρανού
h_i=size(palmoi_star_i,2);    %αριθμός αστέρων που έχουμε παλμούς
z_i=size(palmoi_sky_i,2);     
palmoi_i(1,h_i)=0; 
palmoi_2_i(1,z_i)=0;

for n=1:1:h_i                              %επαναληπτικός βρόχος για όλους τους αστέρες
for k=1:i_i                                %άθροισμα παλμών ενός αστέρα
    palmoi_i(1,n)=palmoi_i(1,n)+palmoi_star_i(k,n);
    k=k+1; 
end
end

for n=1:1:z_i                              %επαναληπτικός βρόχος για όλες τις μετρήσεις
for k=1:j_i                                %άθροισμα παλμών ουρανού
    palmoi_2_i(1,n)=palmoi_2_i(1,n)+palmoi_sky_i(k,n);
    k=k+1;
   end
end
real_palmoi_i=(palmoi_i/i_i)-(palmoi_2_i/j_i);     %πραγματική τιμή παλμών κάθε αστέρα
S_i=real_palmoi_i/t_i/Klimaka_i;           %Ανηγμένος παλμός κάθε αστέρα
m_i=-2.5*log10(S_i);                       %Μέγεθος στο φίλτρο I
i=m_i';                                    %Ταξινόμηση μεγεθών σε πίνακα-στήλη   

%Υπολογισμός αέριας μάζας
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
H=xlsread('H_angle.xlsx');       %Εισαγωγή πίνακα τιμών ωριαίας γωνίας
phi=35;                          %Γεωγραφικό πλάτος τόπου 
delta=xlsread('delta.xlsx');     %Eισαγωγή πίνακα απόκλισης κάθε αστέρα
secz=(sin(phi).*sin(delta)+cos(phi).*cos(delta).*cos(H)).^(-1);   %Υπολογισμός secz
X=secz-0.0018167*(secz-1)-0.002875*(secz-1).^2-0.0008083*(secz-1).^3; %Υπολογισμός αέριας μάζας κάθε αστέρα

%Διόρθωση για την ατμοσφαιρική εξασθένιση α τάξης
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%U-filter
%%%%%%%%%%
U=xlsread('U_standard_stars.xlsx');        %Eισαγωγή πίνακα απόλυτου μεγέθους για πρότυπους αστέρες 
U_u=U-u;                                   %Αφαίρεση του παρατηρούμενου μεγέθους από το απόλυτο
scatter(X,U_u);                            %Γραφική παράσταση σημείων, x-άξονας: Χ y-άξονας: U-u
xlabel('Air mass X');                      %Όνομα άξονα x
ylabel('U - u');                           %Όνομα άξονα y
title('Aτμοσφαιρική εξασθένιση');          %Τίτλος διαγράμματος
hl_u = lsline;                               %Εφαρμογή ευθείας ελαχίστων τετραγώνων
B_u= [ones(size(hl_u.XData(:))), hl_u.XData(:)]\hl_u.YData(:);
Slope_u = B_u(2);                              %Κλίση ευθείας-συντελεστής εξασθένισης α' τάξης
Intercept_u = B_u(1);                          %Σημείο τομής με άξονα y
k_u=abs(Slope_u);                              %Βρίσκουμε την απόλυτη τιμή του συντελεστή εξασθένισης k
u0=u-k_u.*X;                                 %Yπολογισμός των διορθωμένων μεγεθών για κάθε αστέρα
fprintf('H κλίση της ευθείας (U-u)=kX+ b δηλαδή ο συντελεστής εξασθένισης k_u είναι %f',k_u)

Du=U-u0;                                   %Yπολογσιμός της διαφοράς U-u0
Pinakas_2_u=[U,u0,Du,X];          %Φτιάχνουμε πίνακα με τα νέα δεδομένα

%B-filter
%%%%%%%%%%
figyre(2)
B=xlsread('B_standard_stars.xlsx');        %Eισαγωγή πίνακα απόλυτου μεγέθους για πρότυπους αστέρες 
B_b=B-b;                                   %Αφαίρεση του παρατηρούμενου μεγέθους από το απόλυτο
scatter(X,B_b);                            %Γραφική παράσταση σημείων, x-άξονας: Χ y-άξονας: B-b
xlabel('Air mass X');                      %Όνομα άξονα x
ylabel('B - b');                           %Όνομα άξονα y
title('Aτμοσφαιρική εξασθένιση');          %Τίτλος διαγράμματος
hl_b = lsline;                               %Εφαρμογή ευθείας ελαχίστων τετραγώνων
B_b= [ones(size(hl_b.XData(:))), hl_b.XData(:)]\hl_b.YData(:);
Slope_b = B_b(2);                              %Κλίση ευθείας-συντελεστής εξασθένισης α' τάξης
Intercept_b = B_b(1);                          %Σημείο τομής με άξονα y
k_b=abs(Slope_b);                              %Βρίσκουμε την απόλυτη τιμή του συντελεστή εξασθένισης k
b0=b-k_b.*X;                                 %Yπολογισμός των διορθωμένων μεγεθών για κάθε αστέρα
fprintf('H κλίση της ευθείας (B-b)=kX+ b δηλαδή ο συντελεστής εξασθένισης k_b είναι %f',k_b)

Db=B-b0;                                   %Yπολογσιμός της διαφοράς B-b0
Pinakas_2_b=[B,b0,Db,X];          %Φτιάχνουμε πίνακα με τα νέα δεδομένα

%V-filter
%%%%%%%%%%
figure(3)
V=xlsread('V_standard_stars.xlsx');        %Eισαγωγή πίνακα απόλυτου μεγέθους για πρότυπους αστέρες 
V_v=V-v;                                   %Αφαίρεση του παρατηρούμενου μεγέθους από το απόλυτο
scatter(X,V_v);                            %Γραφική παράσταση σημείων, x-άξονας: Χ y-άξονας: V-v
xlabel('Air mass X');                      %Όνομα άξονα x
ylabel('V - v');                           %Όνομα άξονα y
title('Aτμοσφαιρική εξασθένιση');          %Τίτλος διαγράμματος
hl_v = lsline;                               %Εφαρμογή ευθείας ελαχίστων τετραγώνων
B_v= [ones(size(hl_v.XData(:))), hl_v.XData(:)]\hl_v.YData(:);
Slope_v = B_v(2);                              %Κλίση ευθείας-συντελεστής εξασθένισης α' τάξης
Intercept_v = B_v(1);                          %Σημείο τομής με άξονα y
k_v=abs(Slope_v);                              %Βρίσκουμε την απόλυτη τιμή του συντελεστή εξασθένισης k
v0=v-k_v.*X;                                 %Yπολογισμός των διορθωμένων μεγεθών για κάθε αστέρα
fprintf('H κλίση της ευθείας (V-v)=kX+ b δηλαδή ο συντελεστής εξασθένισης k_v είναι %f',k_v)

Dv=V-v0;                                   %Yπολογσιμός της διαφοράς V-v0
Pinakas_2_v=[V,v0,Dv,X];          %Φτιάχνουμε πίνακα με τα νέα δεδομένα

%R-filter
%%%%%%%%%%
figure(4)
R=xlsread('R_standard_stars.xlsx');        %Eισαγωγή πίνακα απόλυτου μεγέθους για πρότυπους αστέρες 
R_r=R-r;                                   %Αφαίρεση του παρατηρούμενου μεγέθους από το απόλυτο
scatter(X,R_r);                            %Γραφική παράσταση σημείων, x-άξονας: Χ y-άξονας: R-r
xlabel('Air mass X');                      %Όνομα άξονα x
ylabel('R - r');                           %Όνομα άξονα y
title('Aτμοσφαιρική εξασθένιση');          %Τίτλος διαγράμματος
hl_r = lsline;                               %Εφαρμογή ευθείας ελαχίστων τετραγώνων
B_r= [ones(size(hl_r.XData(:))), hl_r.XData(:)]\hl_r.YData(:);
Slope_r = B_r(2);                              %Κλίση ευθείας-συντελεστής εξασθένισης α' τάξης
Intercept_r = B_r(1);                          %Σημείο τομής με άξονα y
k_r=abs(Slope_r);                              %Βρίσκουμε την απόλυτη τιμή του συντελεστή εξασθένισης k
r0=r-k_r.*X;                                 %Yπολογισμός των διορθωμένων μεγεθών για κάθε αστέρα
fprintf('H κλίση της ευθείας (R-r)=kX+ b δηλαδή ο συντελεστής εξασθένισης k_r είναι %f',k_r)

Dr=R-r0;                                   %Yπολογσιμός της διαφοράς R-r0
Pinakas_2_r=[R,r0,Dr,X];          %Φτιάχνουμε πίνακα με τα νέα δεδομένα

%I-filter
%%%%%%%%%%
figure(5)
I=xlsread('I_standard_stars.xlsx');        %Eισαγωγή πίνακα απόλυτου μεγέθους για πρότυπους αστέρες 
I_i=I-i;                                   %Αφαίρεση του παρατηρούμενου μεγέθους από το απόλυτο
scatter(X,I_i);                            %Γραφική παράσταση σημείων, x-άξονας: Χ y-άξονας: I-i
xlabel('Air mass X');                      %Όνομα άξονα x
ylabel('I - i');                           %Όνομα άξονα y
title('Aτμοσφαιρική εξασθένιση');          %Τίτλος διαγράμματος
hl_i = lsline;                               %Εφαρμογή ευθείας ελαχίστων τετραγώνων
B_i= [ones(size(hl_i.XData(:))), hl_i.XData(:)]\hl_i.YData(:);
Slope_i = B_i(2);                              %Κλίση ευθείας-συντελεστής εξασθένισης α' τάξης
Intercept_i = B_i(1);                          %Σημείο τομής με άξονα y
k_i=abs(Slope_i);                              %Βρίσκουμε την απόλυτη τιμή του συντελεστή εξασθένισης k
i0=i-k_i.*X;                                 %Yπολογισμός των διορθωμένων μεγεθών για κάθε αστέρα
fprintf('H κλίση της ευθείας (I-i)=kX+ b δηλαδή ο συντελεστής εξασθένισης k_i είναι %f',k_i)

Di=I-i0;                                   %Yπολογσιμός της διαφοράς I-i0
Pinakas_2_i=[I,i0,Di,X];          %Φτιάχνουμε πίνακα με τα νέα δεδομένα

%Διόρθωση για τo πρότυπο σύστημα
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%U-filter
%%%%%%%%%%
figure(6)
scatter(U_B,Du);                            %Γραφική παράσταση σημείων, x-άξονας: U-B y-άξονας: V-v0
xlabel('U-B');                              %Όνομα άξονα x
ylabel('U-u0');                             %Όνομα άξονα y
title('Μετατροπή στο πρότυπο σύστημα');     %Τίτλος διαγράμματος
h2_u = lsline;                              %Εφαρμογή ευθείας ελαχίστων τετραγώνων
C_u = [ones(size(h2_u.XData(:))), h2_u.XData(:)]\h2_u.YData(:);
Slope_2_u = C_u(2);                          %Κλίση ευθείας
Intercept_2_u = C_u(1);                      %Σημείο τομής με άξονα y
fprintf('\n H κλίση της ευθείας (U-u0)=ε(U-B)+ζ δηλαδή ο συντελεστής ε είναι %f',Slope_2_u);
fprintf('\n H σταθερά της ευθείας (U-u0)=ε(U-B)+ζ δηλαδή η σταθερά μηδενικού σημείου ζ είναι %f \n \n',Intercept_2_u)

U_c=v0+Slope_2_v*B_V+Intercept_2_v;           %Υπολογισμός μεγέθους V στοπρότυπο σύστημα για κάθε αστέρα
Pinakas_3_u=[U,u,u0,U_c,U-U_c];               %Δημιουργία πίνακα με τα διορθωμένα μεγέθη για σύγκριση

%B-filter
%%%%%%%%%%
figure(7)
scatter(B_V,Db);                            %Γραφική παράσταση σημείων, x-άξονας: B-V y-άξονας: B-b0
xlabel('B-V');                              %Όνομα άξονα x
ylabel('B-b0');                             %Όνομα άξονα y
title('Μετατροπή στο πρότυπο σύστημα');     %Τίτλος διαγράμματος
h2_b = lsline;                              %Εφαρμογή ευθείας ελαχίστων τετραγώνων
C_b = [ones(size(h2_b.XData(:))), h2_b.XData(:)]\h2_b.YData(:);
Slope_2_b = C_b(2);                          %Κλίση ευθείας
Intercept_2_b = C_b(1);                      %Σημείο τομής με άξονα y
fprintf('\n H κλίση της ευθείας (B-b0)=ε(B-V)+ζ δηλαδή ο συντελεστής ε είναι %f',Slope_2_b);
fprintf('\n H σταθερά της ευθείας (B-b0)=ε(B-V)+ζ δηλαδή η σταθερά μηδενικού σημείου ζ είναι %f \n \n',Intercept_2_b)

B_c=b0+Slope_2_b*B_V+Intercept_2_b;           %Υπολογισμός μεγέθους V στοπρότυπο σύστημα για κάθε αστέρα
Pinakas_3_b=[B,b,b0,B_c,B-B_c];               %Δημιουργία πίνακα με τα διορθωμένα μεγέθη για σύγκριση

%V-filter
%%%%%%%%%%
figure(8)
scatter(B_V,Dv);                            %Γραφική παράσταση σημείων, x-άξονας: B-V y-άξονας: V-v0
xlabel('B-V');                              %Όνομα άξονα x
ylabel('V-v0');                             %Όνομα άξονα y
title('Μετατροπή στο πρότυπο σύστημα');     %Τίτλος διαγράμματος
h2_v = lsline;                              %Εφαρμογή ευθείας ελαχίστων τετραγώνων
C_v = [ones(size(h2_v.XData(:))), h2_v.XData(:)]\h2_v.YData(:);
Slope_2_v = C_v(2);                          %Κλίση ευθείας
Intercept_2_v = C_v(1);                      %Σημείο τομής με άξονα y
fprintf('\n H κλίση της ευθείας (V-v0)=ε(B-V)+ζ δηλαδή ο συντελεστής ε είναι %f',Slope_2_v);
fprintf('\n H σταθερά της ευθείας (V-v0)=ε(B-V)+ζ δηλαδή η σταθερά μηδενικού σημείου ζ είναι %f \n \n',Intercept_2_v)

V_c=v0+Slope_2_v*B_V+Intercept_2_v;           %Υπολογισμός μεγέθους V στοπρότυπο σύστημα για κάθε αστέρα
Pinakas_3_v=[V,v,v0,V_c,V-V_c];               %Δημιουργία πίνακα με τα διορθωμένα μεγέθη για σύγκριση

%R-filter
%%%%%%%%%%
figure(9)
scatter(V_R,Dr);                            %Γραφική παράσταση σημείων, x-άξονας: V-R y-άξονας: R-r0
xlabel('V-R');                              %Όνομα άξονα x
ylabel('R-r0');                             %Όνομα άξονα y
title('Μετατροπή στο πρότυπο σύστημα');     %Τίτλος διαγράμματος
h2_r = lsline;                              %Εφαρμογή ευθείας ελαχίστων τετραγώνων
C_r = [ones(size(h2_r.XData(:))), h2_r.XData(:)]\h2_r.YData(:);
Slope_2_r = C_r(2);                          %Κλίση ευθείας
Intercept_2_r = C_r(1);                      %Σημείο τομής με άξονα y
fprintf('\n H κλίση της ευθείας (R-r0)=ε(V-R)+ζ δηλαδή ο συντελεστής ε είναι %f',Slope_2_r);
fprintf('\n H σταθερά της ευθείας (R-r0)=ε(V-R)+ζ δηλαδή η σταθερά μηδενικού σημείου ζ είναι %f \n \n',Intercept_2_r)

R_c=r0+Slope_2_r*B_V+Intercept_2_r;           %Υπολογισμός μεγέθους V στοπρότυπο σύστημα για κάθε αστέρα
Pinakas_3_v=[R,r,r0,R_c,R-R_c];               %Δημιουργία πίνακα με τα διορθωμένα μεγέθη για σύγκριση

%I-filter
%%%%%%%%%%
figure(10)
scatter(V_I,Di);                            %Γραφική παράσταση σημείων, x-άξονας: V-I y-άξονας: I-i0
xlabel('V-I');                              %Όνομα άξονα x
ylabel('I-i0');                             %Όνομα άξονα y
title('Μετατροπή στο πρότυπο σύστημα');     %Τίτλος διαγράμματος
h2_i = lsline;                              %Εφαρμογή ευθείας ελαχίστων τετραγώνων
C_i = [ones(size(h2_i.XData(:))), h2_i.XData(:)]\h2_i.YData(:);
Slope_2_i = C_i(2);                          %Κλίση ευθείας
Intercept_2_i = C_i(1);                      %Σημείο τομής με άξονα y
fprintf('\n H κλίση της ευθείας (I-i0)=ε(V-I)+ζ δηλαδή ο συντελεστής ε είναι %f',Slope_2_i);
fprintf('\n H σταθερά της ευθείας (I-i0)=ε(V-I)+ζ δηλαδή η σταθερά μηδενικού σημείου ζ είναι %f \n \n',Intercept_2_i)

I_c=i0+Slope_2_i*B_V+Intercept_2_i;           %Υπολογισμός μεγέθους V στοπρότυπο σύστημα για κάθε αστέρα
Pinakas_3_i=[I,i,i0,I_c,I-I_c];               %Δημιουργία πίνακα με τα διορθωμένα μεγέθη για σύγκριση

%Υπολογισμός μεγεθών αγνώστων αστέρων στο πρότυπο σύστημα
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Πίνακας με τα διορθωμένα για την ατμοσφαιρική εξασθένιση μεγέθη αγνώστων αστέρων
unknown_stars=[u0(19) b0(19) v0(19) r0(19) i0(19); u0(21) b0(21) v0(21) r0(21) i0(21)];
Slopes=[Slope_2_u Slope_2_b Slope_2_v Slope_2_r Slope_2_i]; %Πίνακας με συντελεστές ζ σε όλα τα φίλτρα
Inters=[Intercept_2_u Intercept_2_b Intercept_2_v Interecept_2_r Interecept_2_i]; %Πίνακας με συντελεστές ε σε όλα τα φίλτρα

for n=1:2
Uc_1(n)=unknown_stars(n,1)+Slopes(1);          %Επαναληπτική μέθοδος για υπολογισμό μεγεθών και των δύο αστέρων
Bc_1(n)=unknown_stars(n,2)+Slopes(2);
Vc_1(n)=unknown_stars(n,3)+Slopes(3);
Rc_1(n)=unknown_stars(n,4)+Slopes(4);
Ic_1(n)=unknown_stars(n,5)+Slopes(5);

Uc_2(n)=Uc_1(n)+Inters(1)*(Uc_1(n)-Bc_1(n));
Bc_2(n)=Bc_1(n)+Inters(2)*(Bc_1(n)-Vc_1(n));
Vc_2(n)=Vc_1(n)+Inters(3)*(Bc_1(n)-Vc_1(n));
Rc_2(n)=Rc_1(n)+Inters(4)*(Vc_1(n)-Rc_1(n));
Ic_2=Ic_1+Inters(5)*(Vc_1-Ic_1);

Uc_3(n)=Uc_1(n)+Inters(1)*(Uc_2(n)-Bc_2(n));          %Τελικά μεγέθη σε όλα τα φίλτρα και για τους δύο αστέρες
Bc_3(n)=Bc_1(n)+Inters(2)*(Bc_2(n)-Vc_2(n));
Vc_3(n)=Vc_1(n)+Inters(3)*(Bc_2(n)-Vc_2(n));
Rc_3(n)=Rc_1(n)+Inters(4)*(Vc_2(n)-Rc_2(n));
Ic_3(n)=Ic_1(n)+Inters(5)*(Vc_2(n)-Ic_2(n));

n=n+1;
end

disp('          Τελικός πίνακας UBVRI');                    %Εμφάνιση πίνακα τελικών αποτελεσμάτων
disp('       25 η Tau            3 η Eri ');
FINAL=[Uc_3; Bc_3; Vc_3; Rc_3 ;Ic_3];
disp(FINAL);